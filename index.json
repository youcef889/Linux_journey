[{"content":"Welcome to My_Linux_Journey, your go-to resource for learning Linux, exploring open-source software, and mastering system administration. Created by Youcef, this site offers practical tutorials, in-depth Linux distro reviews, sysadmin tips, and scripting guides to help you level up your tech skills.\nWhether you\u0026rsquo;re a beginner or an experienced user, you\u0026rsquo;ll find valuable content on Linux command-line tutorials and shell tricks,Bash and Python scripting for automation Server setup guides and system administration practices,Open-source tools focused on privacy and performance,Self-hosted applications and home lab setups.Troubleshooting real-world Linux issues\nFollow the journey, gain hands-on experience, and become confident in using and managing Linux systems.\n","date":"29 August 2025","externalUrl":null,"permalink":"/Linux_journey/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"29 August 2025","externalUrl":null,"permalink":"/Linux_journey/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"29 August 2025","externalUrl":null,"permalink":"/Linux_journey/categories/linux-basics/","section":"Categories","summary":"","title":"Linux Basics","type":"categories"},{"content":"","date":"29 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"29 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/text-editor/","section":"Tags","summary":"","title":"Text Editor","type":"tags"},{"content":"","date":"29 August 2025","externalUrl":null,"permalink":"/Linux_journey/categories/tutorial/","section":"Categories","summary":"","title":"Tutorial","type":"categories"},{"content":"","date":"29 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/vim/","section":"Tags","summary":"","title":"Vim","type":"tags"},{"content":" Into # What\u0026rsquo;s going on guys youcef here and today we work with files and tabs in vim .as well as how to open and save files in different ways .\nVim does have tabs just like many other text editors do and to deal with the tabs we have to use command though as you kow there\u0026rsquo;s no button to just click on to open new tab and the way that we would open new tab in vim .\nOpen new tab # Is of course using a command so we need our : from normal mode and the command is :tabnew which will go ahead and open a new tab to the right of whatever the last tab that you were just working with was.\nNavigate between tabs # In order to navigate between these tabs so we can do :tabprevious to go back to the prevoius tab and we can do :tabnext to go back to the next tab we can also abbreviate these command a little bit by useing :tabp and :tabn . but went you use this command the name of new tab is no name and this is because there isn\u0026rsquo;t actualy any file open here doesn\u0026rsquo;t actualy have a file name yet . what if we start inputting some text here and then you want it to save this but you wanted to also be able to give it file name .\nSave File # well the command to save is : write in order to give it a name we simply have to do is to hit space and then filename for example :write filename.txt or:w filename.txt.\nOpen file in vim # We are inside of vim we can open up a file from inside of here the command for us to do that is :edit [filename]by the way edit can be shortened to just the latter :e . to show all different files in the directory we write :e [hit tab button] and this going to output all of the file that are in that current directory .\nMultiple Vim tabs # If you have open multipe tabs and you do not went to do tabp three times in order to do that simplly : tabfirst and this automaticlly jump us back to first tab and the opposite in :tablast .\nWe can move our tabs around as well the command for that is :tabmove [numbre for where you want it to go] and postions start at 0 like in programming.\nQuit vim # And to quit vim you need only to type:q to save and quit :wq and quit without saveing :q!\n","date":"29 August 2025","externalUrl":null,"permalink":"/Linux_journey/tutorials/working-with-files-and-tabs-in-vim/","section":"Tutorials Page","summary":"","title":"Working With Files and Tabs in Vim","type":"tutorials"},{"content":"","date":"21 August 2025","externalUrl":null,"permalink":"/Linux_journey/blog/","section":"Blogs","summary":"","title":"Blogs","type":"blog"},{"content":" Key Features and use cases of Nginx # Ngix\u0026rsquo;s archiecture and flexibility make it suitablr foe various use cases\nWeb server # Nginx can serve both static and dynamic content it\u0026rsquo;s highly optimized foe delivering files like HTML,CSS and images very quickly.\nReverse Proxy # It acts as an intermediary between client requestes and backend servers,offering features likr caching ,compression and security.\nLoad Balancer # NGINX can distribute incoming reauests across multiple servers balancing the load to improve availability and reliability, and handling trific spikes efficiently.\nNginx is Event Driven and Asynchronous model .\nNginx Apache -uses an event driven based model uses a process based model User cases When hih performance scalability, and serving static content efficiently are key priorities . when your application requires dynamic content managent ,comllexx configuration or compatibility with legacy system . Setps to install simple Nginx on linux # Install using you packge manager # Void linux :\nsudo xbps-install -S nginx debain\nsudo apt install nginx After Installation you\u0026rsquo;ll Manage Nginx using you are service manager # Void linux\nsudo ln -s /etc/sv/nginx /var/service/ Configer the firewall \u0026lsquo;ufw\u0026rsquo; to manage network traffic and enforce security Policies . # Secutity-Enhanced Linux (SELinux ) prorvides an additional security layer for linux system. # Selinux can block Nginx from function properly if not configured correctly .\nThe configuration File is in /etc/nginx folder # Main Context : Global setting like worker processes . Events Context : Handles connection processing . Http Context : Configures Http server behavior. Server Context : Defines setting for virtual hosts (server blocks). Location Context : sepcifies how to porcess requests for specific locations or URLs.\nKey Directive in the main configuration file (nginx.conf) # We Have User Directive they define nginx which user they work with it . worker_processes we put nombre of cpu core\n↑ More Processes ↑ More conccurent connections set works_processes to the numbre of CPU cores for optimal performance.\nworker_connections nombre of conccurent connction the server can handle or how many simultaneous connections each works can handle. max_clients = worker_processes * worker_connection Http bloc\nConfiguring Error And Access Logging # Access Logs : store details about requests made to the server . example access_log /var/log/nginx/access.log main; **Error logs : Record details about errore encoutered while processing requests . example : error_log /var/log/nginx/error.log wran;\nDocument Root and Permissions # NGINX involves defining the document root ,which is the directory where website files like index.html are stored. Ensure proper permissins are set for the web server to access these files.\nserver { listen 80; server_name example.com; root /var/www/html; index index.html; } Configure the permissions :\nsudo chown -R nginx:nginx /var/www/html Managing index.html and 404 error Pages # Nginx Allows you to configure default index file and custom error pages\nIndex index.html; Configure a custom 404 error pages as follows\nerror_page 404 /404.html; location =/404.html{ root /var/www/html; } Managing Virtual Host (server Blocks) # can prevade to website from seme server evry server block can have his on config .\nTips For Multiple Enviornments (Development Vs Production) # In production Environments ,consider enabling caching ,compression and tighter security controls (e,g ,SSL). Example\nlocation / { Proxy_cach my_chache; Proxy_cache_valid 200 1h; } In development ,Enable detailed logging and easier access for devugging .\nExample error_log /var/log/nginx/dev_error.log debug;\nBasic URL Rewriting and Redirection # the Rewrite Directive allows you to modift the URL before it\u0026rsquo;s processed by the server.\nwe can use to readirec from old page to new page\nrewrite ^/oldpage /newpage permanent; in addition to rewrite , you can use the return directive for simple redirects .\nserver { listen 80; server_name oldsite.com return 301 http:newsite.com$request_uri; } but i we use code 302 Redirect is temporary redirection.\nPractical Example : Configuring nginx with all sections in module2 # In this practical example ,we will walk through the setps required to 1 -set up nginx with a basic configuration 2 -seve static content from a website . 3 - configure multiple virtual host (server blocks) for different domains. 4 -set up custom error pages and directory listings. 5 -implement basic URL rewriting and redirection.\nWhy use a reverse proxy # ","date":"21 August 2025","externalUrl":null,"permalink":"/Linux_journey/blog/introduction-to-nginx/","section":"Blogs","summary":"","title":"Introduction to Nginx","type":"blog"},{"content":"","date":"21 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/nginx/","section":"Tags","summary":"","title":"Nginx","type":"tags"},{"content":"","date":"21 August 2025","externalUrl":null,"permalink":"/Linux_journey/categories/self-hosting/","section":"Categories","summary":"","title":"Self-Hosting","type":"categories"},{"content":"","date":"21 August 2025","externalUrl":null,"permalink":"/Linux_journey/categories/sysadmin--servers/","section":"Categories","summary":"","title":"Sysadmin \u0026 Servers","type":"categories"},{"content":"","date":"21 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/webdev/","section":"Tags","summary":"","title":"Webdev","type":"tags"},{"content":"","date":"17 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/android/","section":"Tags","summary":"","title":"Android","type":"tags"},{"content":"","date":"17 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/blissos/","section":"Tags","summary":"","title":"BlissOs","type":"tags"},{"content":" Manual Install of Bliss os on Linux # this what i get after installing blissOs Bliss os is strong Android x86 operating system designed to run on PCs.But many users do\u0026rsquo;t know how to install it .they struggle with steps of installation ,or even deciding between Versions.\nThis tutorial walks you through installing Bliss os frome scratch .specifically Manaual installation on linux I\u0026rsquo;ll cover every step from downloading the right ISO to configuring Grub.\nWith tested steps ,you\u0026rsquo;ll get Bliss OS up and running smoothly on your Linux PC .\nWarning! not all app\u0026rsquo;s you install on bliss os will work smoothly ? Dowload the iso # Go to this website BlissOS-x86 The Right Bliss ISO you need . # BlissOS16\nAndroid Version: 14 (Upside Down Cake) Note: BlissOS 16.x is built on Android 14 (API level 34). BlissOSZenith\nAndroid Version: 10 (Q) Note: BlissOS Zenith is a specialized edition based on Android 10 (API level 29). BlissOS14\nAndroid Version: 12 (Snow Cone) Note: BlissOS 14.x uses Android 12 (API level 31). BlissOS15\nAndroid Version: 13 (Tiramisu) Note: BlissOS 15.x is derived from Android 13 (API level 33). Feature GApps Variant FOSS Variant Google Play Store ✅ Pre-installed ❌ Not included Google Services ✅ (Play Services, etc.) ❌ Open-Source Focus ❌ (Includes proprietary apps) ✅ (Only FOSS apps) Alternative Stores ❌ (Play Store is primary) ✅ (F-Droid, Aurora Store preinstalled/setup) MicroG Integration ❌ ⚠️ Optional or user-installed Privacy 🔻 Lower (Google telemetry present) 🔺 Higher (No Google tracking) GApps (Google Play Services) # Includes:\nGoogle Play Store, Gmail, YouTube, Maps, Drive, etc. Google Mobile Services (GMS) for app compatibility. Required for apps that depend on Google APIs (e.g., banking apps, games). Best for:\nUsers needing full Android app compatibility. Those reliant on Google ecosystem services. Download:\nLook for builds labeled GApps, with GMS, or Google Play in the filename.\nExample: BlissOS-16-x86_64-GApps-*.iso FOSS (No Google Services) # Includes:\nNo proprietary Google apps/services. Open-source alternatives: App Stores: F-Droid, Aurora Store. MicroG: Lightweight Google Services replacement (optional). Privacy-focused apps (e.g., NewPipe instead of YouTube). Best for:\nPrivacy-focused users. Devices with limited resources (lighter OS). Avoiding Google telemetry. Download:\nLook for builds labeled FOSS, without GApps, or vanilla.\nExample: BlissOS-16-x86_64-FOSS-*.iso In my step-by-Step Guide I will use \u0026ldquo;GApps\u0026rdquo; ,and \u0026ldquo;Bliss-v16.9.4-x86_64-OFFICIAL-gapps-20240220.iso\u0026rdquo;\nInstallation # After dowloading what you need we dive to installation\nrequirements # A Linux system 4 GB Ram grub\nCreate a directory at / as /blissos Extract 7z x Bliss-v16.9.4-x86_64-OFFICIAL-gapps-20240220.iso . and copy initrd.img, ramdisk.img, kernel to /blissos Create a directory called /blissos/data. This will only work for ext4 filesystems, for NTFS and other filesystems or if you are having bootloop you need data.img, can be created with make_ext4fs. mkdir /blissos/data cd data dd if=/dev/zero of=data.img bs=1 count=0 seek=8G sudo mkfs.ext4 -F data.img Create a new grub entry with this the following code (add the following code to /etc/grub.d/40_custom ) #!/bin/sh exec tail -n +3 $0 # This file provides an easy way to add custom menu entries. Simply type the # menu entries you want to add after this comment. Be careful not to change # the \u0026#39;exec tail\u0026#39; line above. menuentry \u0026#34;BlissOS (Default) w/ FFMPEG\u0026#34; { set SOURCE_NAME=\u0026#34;blissos\u0026#34; search --set=root --file /$SOURCE_NAME/kernel linux /$SOURCE_NAME/kernel FFMPEG_CODEC=1 FFMPEG_PREFER_C2=1 quiet root=/dev/ram0 SRC=/$SOURCE_NAME initrd /$SOURCE_NAME/initrd.img } menuentry \u0026#34;BlissOS (Intel) w/ FFMPEG\u0026#34; { set SOURCE_NAME=\u0026#34;blissos\u0026#34; search --set=root --file /$SOURCE_NAME/kernel linux /$SOURCE_NAME/kernel HWC=drm_minigbm_celadon GRALLOC=minigbm FFMPEG_CODEC=1 FFMPEG_PREFER_C2=1 quiet root=/dev/ram0 SRC=/$SOURCE_NAME initrd /$SOURCE_NAME/initrd.img } menuentry \u0026#34;BlissOS PC-Mode (Default) w/ FFMPEG\u0026#34; { set SOURCE_NAME=\u0026#34;blissos\u0026#34; search --set=root --file /$SOURCE_NAME/kernel linux /$SOURCE_NAME/kernel quiet root=/dev/ram0 SRC=/$SOURCE_NAME initrd /$SOURCE_NAME/initrd.img } menuentry \u0026#34;BlissOS PC-Mode (Intel) w/ FFMPEG\u0026#34; { set SOURCE_NAME=\u0026#34;blissos\u0026#34; search --set=root --file /$SOURCE_NAME/kernel linux /$SOURCE_NAME/kernel PC_MODE=1 HWC=drm_minigbm_celadon GRALLOC=minigbm FFMPEG_CODEC=1 FFMPEG_PREFER_C2=1 quiet root=/dev/ram0 SRC=/$SOURCE_NAME initrd /$SOURCE_NAME/initrd.img } Update grub update-grub Reboot your system using sudo reboot new chose well appear in the grub menu choose the bliss os and set up you android system if you have use Gapp\n","date":"17 August 2025","externalUrl":null,"permalink":"/Linux_journey/tutorials/manual-installation-of-bliss-os-on-linux/","section":"Tutorials Page","summary":"","title":"Manual Installation of Bliss Os on Linux","type":"tutorials"},{"content":"","date":"17 August 2025","externalUrl":null,"permalink":"/Linux_journey/categories/os/","section":"Categories","summary":"","title":"Os","type":"categories"},{"content":" How to install and configer Dwm on void linux # Why Dwm # dwm (Dynamic Window Manager) is a minimalistic, lightweight window manager for X11. It has very few dependencies since it\u0026rsquo;s designed to be simple and efficient.\nDependencies # first you should have all this Dependencies:\ngit wget Xlib,libX11-devel libXinerama-devel freetype-devel make gcc libXft-devel libXrandr-devel Installtion # After installing dependencies, you can clone, configure, and build dwm ,st and dmenu:\nInstall Dwm # mkdir programs cd programs # INSTALL dWM git clone https://git.suckless.org/dwm cd dwm sudo make clean install Install ST # git clone https://git.suckless.org/st cd st sudo make clean install cd .. Install dmenu # #INSTALL dmenu (like a program launcher) git clone https://git.suckless.org/dmenu cd dmenu sudo make clean install ","date":"16 August 2025","externalUrl":null,"permalink":"/Linux_journey/tutorials/how-setup-dwm-on-void-linux-/","section":"Tutorials Page","summary":"how to install dwm","title":"How Setup Dwm and st on Void Linux ","type":"tutorials"},{"content":"","date":"16 August 2025","externalUrl":null,"permalink":"/Linux_journey/categories/linux/","section":"Categories","summary":"","title":"Linux","type":"categories"},{"content":"","date":"16 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/suckless-tools-/","section":"Tags","summary":"","title":"Suckless Tools ","type":"tags"},{"content":"","date":"16 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/void-linux/","section":"Tags","summary":"","title":"Void Linux","type":"tags"},{"content":"","date":"16 August 2025","externalUrl":null,"permalink":"/Linux_journey/tags/alpine-liunx-/","section":"Tags","summary":"","title":"Alpine Liunx ","type":"tags"},{"content":"Running Kodi on Alpine Linux is possible, but it requires some extra steps because Alpine is a minimal distribution using musl libc and busybox, which can lead to compatibility issues with software designed for glibc-based distros like Ubuntu or Arch.\nHere’s a guide to help you install Kodi on Alpine Linux:\n✅ Option 1: Install Kodi via apk (if available in community repo) # First, enable the community repository:\nEdit /etc/apk/repositories and uncomment or add the community repo line:\nhttp://dl-cdn.alpinelinux.org/alpine/v3.19/community Update your system:\nsudo apk update Try to install Kodi:\nsudo apk add kodi ⚠️ Note: As of writing, Kodi may not be available directly via APK in the default repos depending on the Alpine version. If the above doesn’t work:\n✅ Option 2: Build Kodi from Source (Advanced) # Kodi can be compiled from source, but it has many dependencies. Here’s a simplified process:\n1. Install build dependencies: # sudo apk add alpine-sdk cmake git mesa-dev \\ libtool autoconf automake eudev-dev \\ libxrandr-dev libxinerama-dev libxkbcommon-dev \\ libx11-dev libxext-dev libinput-dev \\ libressl-dev python3-dev pulseaudio-dev \\ bluez-dev alsa-lib-dev ffmpeg-dev \\ libpng-dev lzo-dev curl-dev \\ dbus-dev libnfs-dev taglib-dev \\ libass-dev freetype-dev fribidi-dev 2. Clone Kodi source: # git clone https://github.com/xbmc/xbmc.git cd xbmc 3. Run cmake and build: # mkdir build cd build cmake .. make -j$(nproc) sudo make install 4. Run Kodi: # kodi ✅ Option 3: Run Kodi in Docker on Alpine # Alpine works well with containers. You can run Kodi in a Docker container with X11 support:\nInstall Docker:\nsudo apk add docker sudo service docker start Run Kodi container:\ndocker run -it --rm \\ --device /dev/dri \\ -e DISPLAY=$DISPLAY \\ -v /tmp/.X11-unix:/tmp/.X11-unix \\ ghcr.io/linuxserver/kodi ⚠️ This requires X11 to be running on the host. If you’re using Alpine in headless or server mode, use Kodi\u0026rsquo;s Web UI or MySQL backend remotely.\n🛠 Optional: Use Kodi without full DE (like with xinit) # If you want to run Kodi on Alpine with minimal resources:\nInstall Xorg:\nsudo apk add xorg-server xf86-video-vesa xf86-input-libinput Set up .xinitrc:\necho \u0026#34;exec kodi\u0026#34; \u0026gt; ~/.xinitrc startx 📦 Minimal Alpine Kodi Setup Summary: # Task Command Enable community repo vi /etc/apk/repositories Update APK apk update Try to install Kodi apk add kodi (may fail) Build from source git clone + cmake + make Run via Docker docker run -it ghcr.io/linuxserver/kodi Launch Kodi directly startx with .xinitrc Would you like me to help you build a Kodi-based Alpine image for Raspberry Pi or embedded use (e.g., e-reader/media center setup)?\n","date":"16 August 2025","externalUrl":null,"permalink":"/Linux_journey/tutorials/install_kodi_on_alpine_linnx/","section":"Tutorials Page","summary":"","title":"Install kodi on  alpine linux ","type":"tutorials"},{"content":" Tutorials – My Role \u0026amp; What to Expect # Welcome to the Tutorials section of My_Linux_Journey!\nEvery tutorial you find here is tested by me personally before being published. My goal is to share reliable, practical guides based on real-world experience.\nYou are free to use all resources and tutorials available here—completely free.\nIf you find any mistakes, outdated steps, or know a better way to do something, feel free to leave a comment. Your feedback helps improve the content for everyone.\nLet’s learn and grow together in the Linux and open-source world! 🐧\n","date":"15 August 2025","externalUrl":null,"permalink":"/Linux_journey/tutorials/","section":"Tutorials Page","summary":"","title":"Tutorials Page","type":"tutorials"},{"content":"","date":"15 August 2024","externalUrl":null,"permalink":"/Linux_journey/tags/linux-basics/","section":"Tags","summary":"","title":"Linux Basics","type":"tags"},{"content":" The Kernel # 1. How to check the kernel version of a Linux system? # uname commend print system infomation\nRun:\nuname -a # print all information uname -r # print the kernel release uname -v # print the kernel version 2. List installed kernels # Run:\nxbps-query -l | grep linux or\nls /boot 3. Remove older kernels # sudo xbps-remove -R linux6.6-6.6.21_1 linux6.6-6.6.77_1 linux6.12-6.12.13_1 or\nsudo rm config-6.12.23_1 initramfs-6.12.23_1.img vmlinuz-6.12.23_1 4. Update GRUB (if using GRUB) # After removing old kernels, update GRUB so it doesn\u0026rsquo;t list them:\nsudo xbps-reconfigure -f grub or\nif you are using grub-mkconfig:\nsudo grub-mkconfig -o /boot/grub/grub.cfg ","date":"15 August 2024","externalUrl":null,"permalink":"/Linux_journey/blog/what_i_learned/","section":"Blogs","summary":"","title":"What i learned about the kernel  of  linux system  ","type":"blog"},{"content":" Welcome to My_Linux_Journey! 🐧✨ # Hey there! I\u0026rsquo;m [Bouaissi Youcef], and this website is all about my adventures in the world of Linux, Open Source, and System Administration. Whether you\u0026rsquo;re a beginner just starting out or a seasoned user looking for advanced tips, join me as I explore:\n🔹 Linux tutorials \u0026amp; command-line tricks\n🔹 Distro reviews \u0026amp; comparisons\n🔹 Sysadmin guides \u0026amp; server setups\n🔹 Scripting \u0026amp; automation (Bash, Python, etc.)\n🔹 Open-source software \u0026amp; privacy tools\n🔹 Troubleshooting \u0026amp; problem-solving\nThis website is a no-fluff, hands-on resource where I share real-world experiences—both successes and failures—to help you master Linux efficiently.\n🔔 Subscribe to stay updated on new content!\n💬 Join the discussion in the comments—let’s learn together!\nConnect with me:\n📷 Instagram: [@YourHandle]\n🐦 Twitter: [@YourHandle]\n🌍 Youtube: []\n\u0026ldquo;The Linux philosophy is \u0026lsquo;Do It Yourself.\u0026rsquo; Let’s embrace the journey!\u0026rdquo; 🚀\n","externalUrl":null,"permalink":"/Linux_journey/about/","section":"","summary":"","title":"About Me","type":"page"},{"content":"","externalUrl":null,"permalink":"/Linux_journey/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":" Contact Us # Welcome to My_Linux_Journey – your go-to resource for learning Linux, exploring open-source software, and mastering system administration.\nCreated by Youcef, this platform is dedicated to sharing practical tutorials, in-depth Linux distro reviews, sysadmin tips, and scripting guides to help you level up your tech skills.\nWhether you’re just starting out or already an experienced user, here you’ll find valuable content on:\nLinux command-line tutorials and shell tricks Bash and Python scripting for automation Server setup guides and system administration practices Open-source tools focused on privacy and performance Self-hosted applications and home lab setups Troubleshooting real-world Linux issues We’d love to hear from you!\nWhether you have questions, feedback, or collaboration ideas, don’t hesitate to get in touch. Your thoughts help us improve and continue building a helpful resource for the Linux community.\n📬 Let’s connect and continue the journey together!\n","externalUrl":null,"permalink":"/Linux_journey/contact_us/","section":"","summary":"","title":"Contact Us","type":"page"},{"content":"","externalUrl":null,"permalink":"/Linux_journey/series/","section":"Series","summary":"","title":"Series","type":"series"}]